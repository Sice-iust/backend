# Generated by Django 5.1.7 on 2025-05-09 12:15

import django.db.models.deletion
import django.utils.timezone
import wallet.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_wallet', to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(default=wallet.utils.create_short_uuid4, editable=False, max_length=12, unique=True)),
                ('description', models.TextField(blank=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Success'), (2, 'Pending'), (3, 'Failed')], default=2)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Credit'), (2, 'Debit')])),
                ('at', models.DateTimeField(default=django.utils.timezone.now)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wallet_transactions', to='wallet.userwallet')),
            ],
        ),
        migrations.AddConstraint(
            model_name='userwallet',
            constraint=models.CheckConstraint(condition=models.Q(('balance__gte', 0)), name='valid_balance'),
        ),
        migrations.AddConstraint(
            model_name='wallettransaction',
            constraint=models.CheckConstraint(condition=models.Q(('value__gte', 0)), name='valid_value'),
        ),
    ]
